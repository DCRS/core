#!/bin/sh -e
#
# Copyright (C) 2017 Canonical Ltd
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

switch_service_ssh() {
	case "$1" in
		false)
			# When the unit is already enabled but not active a call with
			# --now does start the unit so we have to check for that  case
			# and explicitly start the unit.
			if [ "$(systemctl is-enabled ssh.service)" = "disabled" ]; then
				systemctl enable ssh.service
			fi
			if [ "$(systemctl is-active ssh.service)" = "inactive" ]; then
				systemctl start ssh.service
			fi
			;;
		true)
			# A simple `systemctl disable --now ssh.service` doesn't work
			# and fails with an error message. Because of that we're going
			# in two steps here and disable first and then stopping the
			# service unit.
			systemctl disable ssh.service
			systemctl stop ssh.service
			;;
		*)
			echo "ERROR: Invalid value '$1' provided for option service.ssh.disable"
			exit 1
	esac
}

value=$(snapctl get service.ssh.disable)
if [ -n "$value" ]; then
	switch_service_ssh $value
fi
